name: Test

on: [push, pull_request]

jobs:
  ruby-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.versions.outputs.value }}
    steps:
      - id: versions
        run: |
          versions=$(curl -s 'https://cache.ruby-lang.org/pub/misc/ci_versions/all.json' | jq -c '. + ["2.5"]')
          echo "value=${versions}" >> $GITHUB_OUTPUT
  test:
    needs: ruby-versions
    name: build (${{ matrix.ruby }} / ${{ matrix.os }})
    strategy:
      matrix:
        ruby: ${{ fromJson(needs.ruby-versions.outputs.versions) }}
        os: [ 'ubuntu-latest' ]
        include:
          - { os: macos-latest, ruby: 'head' }
          - { os: macos-latest, ruby: 'jruby-head' }
          - { os: macos-latest, ruby: 'truffleruby-head' }
          - { os: windows-latest, ruby: 'head' }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # 'bundle install' and cache
      - name: Ensure new-enough RubyGems for Ruby 2.6
        run: gem update --system
        if: ${{ matrix.ruby == '2.6' }}
      - name: Ensure new-enough RubyGems for Ruby 2.5
        run: |
          gem install rubygems-update -v "~> 3.3.26"
          update_rubygems
        if: ${{ matrix.ruby == '2.5' }}
      - name: Run test
        run: bundle exec rake
        env:
          JRUBY_OPTS: -X+O
